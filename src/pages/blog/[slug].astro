---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
// import("../../styles/blog.scss");

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const posts = await getCollection("blog");
const entry = posts.find((p) => p.slug === Astro.params.slug); //await getEntry("blog", String(Astro.params.slug) as any);
if (!entry) throw new Error("Entry not found");

const { Content } = await entry?.render();
---

<Layout title={entry?.data.title}>
  <main class="article">
    <div class="header">
      {entry.data.banner && <img src={entry.data.banner} alt="post banner" />}
      <a href="/blog" class="back">
        <svg
          viewBox="0 0 72 60"
          version="1.1"
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink"
        >
          <g
            id="Page-1"
            stroke="none"
            stroke-width="1"
            fill="none"
            fill-rule="evenodd"
          >
            <g
              id="arrow.right"
              transform="translate(-1414.000000, -631.000000)"
              fill="currentColor"
              fill-rule="nonzero"
            >
              <g id="Symbols" transform="translate(524.188620, 627.787100)">
                <g
                  id="Regular-S"
                  transform="translate(925.659440, 32.958985) scale(-1, 1) translate(-925.659440, -32.958985) translate(890.137000, 3.662100)"
                >
                  <path
                    d="M71.04488,29.2969 C71.04488,28.2227 70.55668,27.1973 69.67778,26.3672 L44.48238,1.2207 C43.60348,0.3906 42.62698,0 41.60158,0 C39.45318,0 37.79298,1.6113 37.79298,3.8086 C37.79298,4.834 38.13478,5.8594 38.86718,6.543 L45.60548,13.5254 L62.10938,28.418 L62.98828,26.2696 L49.99998,25.3418 L3.90628,25.3418 C1.61138,25.3418 1.77635684e-15,27.002 1.77635684e-15,29.2969 C1.77635684e-15,31.5918 1.61138,33.252 3.90628,33.252 L49.99998,33.252 L62.98828,32.3242 L62.10938,30.2246 L45.60548,45.0684 L38.86718,52.0508 C38.13478,52.7344 37.79298,53.7598 37.79298,54.78518 C37.79298,56.98244 39.45318,58.59377 41.60158,58.59377 C42.62698,58.59377 43.60348,58.20314 44.48238,57.37307 L69.67778,32.2266 C70.55668,31.3965 71.04488,30.3711 71.04488,29.2969 Z"
                    id="Path"></path>
                </g>
              </g>
            </g>
          </g>
        </svg>Back to articles</a
      >
      <label>{entry.data.date.toLocaleDateString()}</label>
      <h1>{entry.data.title}</h1>
      {entry.data.subtitle && <p>{entry.data.subtitle}</p>}
    </div>
    <div class="article-content">
      <Content />
    </div>
  </main>
</Layout>

<style is:global lang="scss">
  main.article {
    width: calc(100vw - 48px);
    max-width: 640px;
    margin: auto;
    margin-bottom: 128px;
    margin-top: 64px;
    div.header {
      margin-bottom: 56px;
      a {
        display: block;
        color: var(--colour-primary);
        font-size: 14px;
        text-decoration: none;
        font-weight: 500;
        display: flex;
        align-items: center;
        margin-bottom: 24px;
        &:hover {
          text-decoration: underline;
          svg {
            transform: translateX(-2px);
          }
        }
        svg {
          transition: 120ms;
          height: 14px;
          width: 14px;
          margin-right: 4px;
        }
      }
      img {
        width: 100%;
        border-radius: 6px;
        display: block;
        margin-bottom: 24px;
      }
      label {
        font-size: 14px;
        opacity: 0.8;
        font-weight: 500;
        margin: 0;
        margin-bottom: 4px;
        display: block;
      }
      h1 {
        margin: 0;
        font-size: 36px;
      }
      p {
        margin: 0;
        margin-top: 4px;
        font-weight: 500;
        font-size: 16px;
      }
    }

    div.article-content {
      img {
        display: block;
        margin-top: 16px;
        width: 100%;
        border-radius: 6px;
      }
      h1,
      h2,
      h3 {
        margin: 0;
        margin-top: 32px;
      }
      h1 {
        font-size: 48px;
        margin-top: 32px;
      }
      h2 {
        margin-top: 24px;
      }
      h3 {
        margin-top: 16px;
      }
      p {
        margin: 0;
        margin-top: 12px;
        font-size: 14px;
        font-weight: 500;
        opacity: 0.8;
      }
      a {
        color: var(--colour-primary);
        text-decoration: none;
        &:hover {
          text-decoration: underline;
        }
      }
      pre {
        font-size: 0.875rem;
        background: var(--code-background);
        border: 1px solid var(--code-border);
        border-radius: 6px;
        font-weight: 500 !important;
        max-width: 100%;
        overflow: auto;
        margin: 0;
        margin-top: 24px;
      }

      pre code {
        display: block;
        min-width: -webkit-max-content;
        min-width: -moz-max-content;
        min-width: max-content;
        padding-top: 12px;
        padding-bottom: 12px;
        // font-size: 0.875rem !important;
        // font-family: var(--font-code) !important;
      }

      code .line-number,
      code .summary-caret {
        margin-right: 8px;
      }

      .torchlight .line {
        padding-left: 16px;
        padding-right: 16px;
        padding-block: 1px;
      }

      .torchlight.has-focus-lines .line:not(.line-focus) {
        filter: blur(0.095rem);
        opacity: 0.4;
        transition: filter 0.35s, opacity 0.35s;
      }

      .torchlight.has-focus-lines:hover .line:not(.line-focus) {
        filter: blur(0);
        opacity: 1;
      }

      .torchlight summary:focus {
        outline: none;
      }

      .torchlight details > summary::-webkit-details-marker,
      .torchlight details > summary::marker {
        display: none;
      }

      .torchlight details .summary-caret:after {
        pointer-events: none;
      }

      .torchlight .summary-caret-empty:after,
      .torchlight details .summary-caret-end:after,
      .torchlight details .summary-caret-middle:after {
        content: " ";
      }

      .torchlight details[open] .summary-caret-start:after {
        content: "-";
      }

      .torchlight details:not([open]) .summary-caret-start:after {
        content: "+";
      }

      .torchlight details[open] .summary-hide-when-open {
        display: none;
      }

      .torchlight details:not([open]) .summary-hide-when-open {
        display: inline;
      }
    }
  }
</style>
